{"version":3,"sources":["components/VideoPlayer/index.jsx","data/index.js","components/StripeButton/index.jsx","utils/StripeJs/index.js","components/StripePay/index.jsx","utils/BreackPoint/index.jsx","pages/DonationPage/index.jsx","components/StripeButtonMobile/index.jsx","components/StripePayMobile/index.jsx","pages/MobileVersion/index.jsx","pages/VideoPage/index.jsx","pages/DonationButtons/index.jsx","router.jsx","App.js","serviceWorker.js","index.js"],"names":["Index","srcUrl","useEffect","Plyr","className","id","playsInline","controls","autoPlay","src","type","stripeMeta","strpId","btnId","btnCategory","btnText","priceId","VideoSrc","stripeData","data-qa","runStripe","stripeId","divId","a","Stripe","stripe","document","getElementById","addEventListener","redirectToCheckout","lineItems","price","quantity","mode","successUrl","window","location","protocol","cancelUrl","then","result","error","textContent","message","map","strp","StripeJs","stripeDiv","x","StripeButton","breakPoints","desktop","tablet","phone","BreakPoint","propTypes","string","object","props","breakPoint","name","query","children","Container","styled","div","Rect","Rect1","RectRow","VideoPlayer","StripePay","Component","StripeButtonMobile","index","StripePayMobile","AppRouter","path","component","VideoPage","DonatBtns","DonationPage","exact","App","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.949086e3.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\r\nimport Plyr from \"plyr\"\r\n\r\nconst Index = ({ srcUrl }) => {\r\n    useEffect(() =>{\r\n        new Plyr('#vdepa');\r\n    }) \r\n    return (\r\n        <div className=\"vdepa\">\r\n        <video\r\n            id=\"vdepa\"\r\n            playsInline\r\n            controls\r\n            className=\"media-player__Video-gqzi7w-5 kueHaM\"\r\n            autoPlay=\"autoplay\"\r\n          >\r\n            <source\r\n              src={srcUrl}\r\n              type=\"video/mp4\"\r\n            />\r\n          </video>\r\n          </div>\r\n    )\r\n}\r\n\r\nexport default Index;\r\n","const stripeMeta = (strpId, btnId, btnCategory, btnText, priceId) => ({\r\n  strpId,\r\n  btnId,\r\n  btnCategory,\r\n  btnText,\r\n  priceId\r\n});\r\n\r\nexport const VideoSrc =\r\n  \"https://res.cloudinary.com/dsdkssc5e/video/upload/v1593023516/Donation_video_copy_kzarti.mp4\";\r\n\r\nexport const stripeData = [\r\n  stripeMeta(\r\n    \"pk_live_5GM16A7hC4non0p8vwxikBEy00ja0bU4Iq\",\r\n    \"checkout-button-sku_HVDscuGwFYhCls\", \r\n  \"A\", \"$5 for 🤜🤛\",\r\n  \"sku_HVDscuGwFYhCls\",\r\n  ),\r\n  stripeMeta(\r\n    'pk_live_5GM16A7hC4non0p8vwxikBEy00ja0bU4Iq',\r\n    \"checkout-button-sku_HVDsxxbXRqfRA8\",\r\n    \"B\", \"$10 for ✊\",\r\n    'sku_HVDsxxbXRqfRA8',\r\n    ),\r\n  stripeMeta(\r\n    'pk_live_5GM16A7hC4non0p8vwxikBEy00ja0bU4Iq',\r\n    \"checkout-button-sku_HVDsgbFVuaRLJo\", \r\n    \"C\", \"$20 for 🙏\",\r\n    'sku_HVDsgbFVuaRLJo',\r\n    ),\r\n  stripeMeta(\r\n    'pk_live_5GM16A7hC4non0p8vwxikBEy00ja0bU4Iq',\r\n    \"checkout-button-sku_HVDsWxIrdcPaPD\", \r\n    \"D\", \"$50 for 👏\",\r\n    'sku_HVDsWxIrdcPaPD',\r\n    ),\r\n  stripeMeta(\r\n    'pk_live_5GM16A7hC4non0p8vwxikBEy00ja0bU4Iq',\r\n    \"checkout-button-sku_HVDs7rks2PPfFF\", \r\n    \"E\", \"$100 for 🙌\",\r\n    'sku_HVDs7rks2PPfFF',\r\n    ),\r\n  stripeMeta(\r\n    'pk_live_5GM16A7hC4non0p8vwxikBEy00ja0bU4Iq',\r\n    \"checkout-button-sku_HVKFOGMOPERMOlrmor\", \r\n    \"F\", \"Other amount\",\r\n    null,)\r\n];\r\n","import React from \"react\";\r\n\r\nconst Index = ({ btnId, btnCategory, btnText }) => {\r\n  return (\r\n    <button\r\n      data-qa=\"poll-option-0\"\r\n      className=\"poll__ItemButton-iptlde-0 fvmKtl\"\r\n      id={btnId}\r\n    >\r\n      <span className=\"poll__Letter-iptlde-1 fxXBlX\">{btnCategory}</span>\r\n      <span className=\"poll__Content-iptlde-3 jJameY\">{btnText}</span>\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Index;\r\n","import {loadStripe as Stripe} from '@stripe/stripe-js'\r\n\r\nconst runStripe = async (stripeId, divId, priceId) => {\r\n  const stripe = await Stripe(stripeId);\r\n  const checkoutButton = document.getElementById(divId);\r\n  checkoutButton.addEventListener(\"click\", () => {\r\n    stripe\r\n      .redirectToCheckout({\r\n        lineItems: [{ price: priceId, quantity: 1 }],\r\n        mode: \"payment\",\r\n        successUrl: `${window.location.protocol}//delovery.org/success`,\r\n        cancelUrl: `${window.location.protocol}//delovery.org/canceled`,\r\n      })\r\n      .then((result) => {\r\n        if (result.error) {\r\n          const displayError = document.getElementById(\"error-message\");\r\n          displayError.textContent = result.error.message;\r\n        }\r\n      });\r\n  });\r\n};\r\nexport default runStripe;\r\n","import React, { useEffect } from \"react\";\r\nimport { stripeData } from \"../../data\";\r\nimport StripeButton from \"../StripeButton\";\r\nimport StripeJs from '../../utils/StripeJs'\r\n\r\nconst Index = () => {\r\n  useEffect(() => {\r\n    stripeData.map((strp) => StripeJs(strp.strpId, strp.btnId, strp.priceId ))\r\n  })\r\n  const stripeDiv = stripeData.map((x) => <div\r\n  id={x.btnId}>\r\n    <StripeButton\r\n  id={x.btnId}\r\n  btnId={x.btnId}\r\n  btnCategory={x.btnCategory}\r\n  btnText={x.btnText}\r\n  />\r\n  </div>\r\n)\r\n  return (\r\n    <div className=\"ksdla\">\r\n      <div id=\"error-message\"></div>\r\n      <div className=\"dntbtn\">\r\n        <div className=\"poll__Wrapper-iptlde-5 dpBdeQ\">\r\n        { stripeDiv  }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n","import React from \"react\";\r\nimport MediaQuery from \"react-responsive\";\r\nimport propTypes from 'prop-types';\r\n\r\nconst breakPoints = {\r\n    desktop: '(min-width: 1025px)',\r\n    tablet: '(min-width: 768px) and (max-width: 1024px)',\r\n    phone: '(max-width: 1000px)',\r\n}\r\n\r\nconst { string, object } = propTypes;\r\n\r\nconst BreakPoint = (props) => {\r\n    const breakPoint = breakPoints[props.name] || breakPoints.desktop;\r\n    return(\r\n        <MediaQuery query={breakPoint}>\r\n            { props.children }\r\n        </MediaQuery>\r\n    )\r\n}\r\n\r\nBreakPoint.propTypes = {\r\n    name: string,\r\n    children: object,\r\n  }\r\n\r\nexport default BreakPoint;\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport VideoPlayer from \"../../components/VideoPlayer\";\r\nimport StripePay from \"../../components/StripePay\";\r\nimport { VideoSrc } from '../../data'\r\nimport BreakPoint from \"../../utils/BreackPoint\";\r\n\r\nconst Container = styled.div`\r\n  // display: flex;\r\n  // flex-direction: row;\r\n  // height: 100%;\r\n  // width: 100%;\r\n`;\r\n\r\nconst Rect = styled.div`\r\n  width: 668px;\r\n  height: 657px;\r\n  background-color: #fff;\r\n`;\r\n\r\nconst Rect1 = styled.div`\r\n  width: 698px;\r\n  height: 100%;\r\n  background-color: #fff;\r\n`;\r\n\r\nconst RectRow = styled.div`\r\n  height: 100%;\r\n  flex-direction: row;\r\n  display: flex;\r\n  flex: 1 1 0%;\r\n`;\r\n\r\nclass Index extends Component {\r\n  render() {\r\n    return (\r\n      <BreakPoint name=\"desktop\">\r\n      <Container id=\"desktop-vr\">\r\n        <RectRow>\r\n          <Rect>\r\n            <VideoPlayer \r\n            srcUrl={VideoSrc}\r\n            />\r\n          </Rect>\r\n          <Rect1>\r\n            <StripePay/>\r\n          </Rect1>\r\n        </RectRow>\r\n      </Container>\r\n      </BreakPoint>\r\n    );\r\n  }\r\n}\r\nexport default Index;\r\n","import React from \"react\";\r\n\r\nconst Index = ({ btnId, btnCategory, btnText }) => {\r\n  return (\r\n    <button\r\n      data-qa=\"poll-option-0\"\r\n      className=\"poll__ItemButton-iptlde-0 fvmKtl mble\"\r\n      id={btnId}\r\n    >\r\n      <span className=\"poll__Letter-iptlde-1 fxXBlX mdble\">{btnCategory}</span>\r\n      <span className=\"poll__Content-iptlde-3 jJameY mbdfs\">{btnText}</span>\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Index;\r\n","import React, { useEffect } from \"react\";\r\nimport { stripeData } from \"../../data\";\r\nimport StripeButtonMobile from \"../StripeButtonMobile\";\r\nimport StripeJs from '../../utils/StripeJs'\r\n\r\nconst Index = () => {\r\n  useEffect(() => {\r\n    stripeData.map((strp) => StripeJs(strp.strpId, strp.btnId, strp.priceId ))\r\n  })\r\n  const stripeDiv = stripeData.map((x) => <div\r\n  id={x.btnId}>\r\n    <StripeButtonMobile\r\n  id={x.btnId}\r\n  btnId={x.btnId}\r\n  btnCategory={x.btnCategory}\r\n  btnText={x.btnText}\r\n  />\r\n  </div>\r\n)\r\n  return (\r\n    <div className=\"asfsf\">\r\n      <div id=\"error-message\"></div>\r\n      <div className=\"sdfadafadsf\">\r\n        <div className=\"asJjaljwjdjadas\">\r\n        { stripeDiv  }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport BreakPoint from \"../../utils/BreackPoint\";\r\nimport propTypes from 'prop-types';\r\nimport { VideoSrc } from '../../data'\r\nimport VideoPlayerMobile from \"../../components/VideoPlayerMobile\";\r\nimport StripePayMobile from '../../components/StripePayMobile'\r\n\r\nconst MobileView = (props) => {\r\n  return (\r\n    <BreakPoint name=\"phone\">\r\n    <Container>\r\n      <div className=\"topctnd\">\r\n      <VideoPlayerMobile\r\n            srcUrl={VideoSrc}\r\n            />\r\n      </div>\r\n      <div className=\"btmctnd\">\r\n      <StripePayMobile/>\r\n      </div>\r\n    </Container>\r\n    </BreakPoint>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100vh;\r\n  width: 100vw;\r\n`;\r\n\r\nexport default MobileView;\r\n","import React from 'react'\r\nimport VideoPlayer from '../../components/VideoPlayer'\r\nimport { VideoSrc } from '../../data'\r\nimport styled from \"styled-components\";\r\nimport BreakPoint from '../../utils/BreackPoint';\r\n\r\nconst Rect = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n  background-color: #fff;\r\n`;\r\n\r\nexport default function index() {\r\n    return (\r\n      <BreakPoint name=\"phone\">\r\n        <Rect>\r\n        <VideoPlayer \r\n        srcUrl={VideoSrc}\r\n        />\r\n      </Rect>\r\n      </BreakPoint>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport StripePayMobile from '../../components/StripePayMobile'\r\nimport styled from \"styled-components\";\r\nimport BreakPoint from '../../utils/BreackPoint';\r\n\r\nconst Rect1 = styled.div`\r\n  width: 698px;\r\n  height: 100%;\r\n  background-color: #fff;\r\n`;\r\n\r\nexport default function index() {\r\n    return (\r\n      <BreakPoint name=\"phone\">\r\n       <Rect1>\r\n            <StripePayMobile />\r\n       </Rect1>\r\n       </BreakPoint>\r\n    )\r\n}\r\n","import React from \"react\"\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport VideoPage from './pages/VideoPage'\r\nimport DonatBtns from './pages/DonationButtons'\r\nimport DonationPage from './pages/DonationPage'\r\n\r\nconst AppRouter = () => {\r\n    return (\r\n    <Router>\r\n        <Switch>\r\n        <Route path=\"/dontionvideo\" component={VideoPage} />\r\n        <Route path=\"/dontionbtns\" component={DonatBtns} />\r\n        <Route path=\"/file-cdn\" component={DonationPage} />\r\n        <Route path=\"/\" component={DonationPage} exact />\r\n        </Switch>\r\n    </Router>\r\n    )\r\n}\r\n\r\nexport default AppRouter;\r\n","import React from 'react';\r\nimport DonationPage from './pages/DonationPage'\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Mobilemode from './pages/MobileVersion';\r\nimport AppRouter from './router';\r\n\r\nfunction App() {\r\n  return (\r\n    <AppRouter />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport \"./index.css\";\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}